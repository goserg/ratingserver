//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Log = newLogTable("", "log", "")

type logTable struct {
	sqlite.Table

	//Columns
	ID        sqlite.ColumnInteger
	UserID    sqlite.ColumnInteger
	Message   sqlite.ColumnString
	CreatedAt sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type LogTable struct {
	logTable

	EXCLUDED logTable
}

// AS creates new LogTable with assigned alias
func (a LogTable) AS(alias string) *LogTable {
	return newLogTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LogTable with assigned schema name
func (a LogTable) FromSchema(schemaName string) *LogTable {
	return newLogTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LogTable with assigned table prefix
func (a LogTable) WithPrefix(prefix string) *LogTable {
	return newLogTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LogTable with assigned table suffix
func (a LogTable) WithSuffix(suffix string) *LogTable {
	return newLogTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLogTable(schemaName, tableName, alias string) *LogTable {
	return &LogTable{
		logTable: newLogTableImpl(schemaName, tableName, alias),
		EXCLUDED: newLogTableImpl("", "excluded", ""),
	}
}

func newLogTableImpl(schemaName, tableName, alias string) logTable {
	var (
		IDColumn        = sqlite.IntegerColumn("id")
		UserIDColumn    = sqlite.IntegerColumn("user_id")
		MessageColumn   = sqlite.StringColumn("message")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		allColumns      = sqlite.ColumnList{IDColumn, UserIDColumn, MessageColumn, CreatedAtColumn}
		mutableColumns  = sqlite.ColumnList{UserIDColumn, MessageColumn, CreatedAtColumn}
	)

	return logTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		UserID:    UserIDColumn,
		Message:   MessageColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
