//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Players = newPlayersTable("", "players", "")

type playersTable struct {
	sqlite.Table

	// Columns
	ID        sqlite.ColumnString
	Name      sqlite.ColumnString
	CreatedAt sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type PlayersTable struct {
	playersTable

	EXCLUDED playersTable
}

// AS creates new PlayersTable with assigned alias
func (a PlayersTable) AS(alias string) *PlayersTable {
	return newPlayersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlayersTable with assigned schema name
func (a PlayersTable) FromSchema(schemaName string) *PlayersTable {
	return newPlayersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PlayersTable with assigned table prefix
func (a PlayersTable) WithPrefix(prefix string) *PlayersTable {
	return newPlayersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PlayersTable with assigned table suffix
func (a PlayersTable) WithSuffix(suffix string) *PlayersTable {
	return newPlayersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPlayersTable(schemaName, tableName, alias string) *PlayersTable {
	return &PlayersTable{
		playersTable: newPlayersTableImpl(schemaName, tableName, alias),
		EXCLUDED:     newPlayersTableImpl("", "excluded", ""),
	}
}

func newPlayersTableImpl(schemaName, tableName, alias string) playersTable {
	var (
		IDColumn        = sqlite.StringColumn("id")
		NameColumn      = sqlite.StringColumn("name")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		allColumns      = sqlite.ColumnList{IDColumn, NameColumn, CreatedAtColumn}
		mutableColumns  = sqlite.ColumnList{NameColumn, CreatedAtColumn}
	)

	return playersTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Name:      NameColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
